{{- if and .Info .Info.Title -}}
// {{ .Info.Title }} client
{{- end }}

{{- range $type := .Types }}

export interface {{ $type.GoName }} {
	{{- range $field := .Fields }}
	{{- if $field.Optional }}
	{{ padRight (printf "%s?:" $field.APIName) (add $type.GoNameMaxLen 2) }} {{ $field.TSType }} | null;
	{{- else }}
	{{ padRight (printf "%s:" $field.APIName) (add $type.GoNameMaxLen 2) }} {{ $field.TSType }};
	{{- end }}
	{{- end }}
}
{{- end }}

export class Client {
	private baseURL: URL;

	constructor(baseURL: string) {
		this.baseURL = new URL(baseURL);
	}

	async debugInfo(): Promise<DebugInfo> {
		const url = new URL('_debug', this.baseURL);

		const resp = await fetch(url);
		if (!resp.ok) {
			throw await resp.json();
		}

		return resp.json();
	}
}
